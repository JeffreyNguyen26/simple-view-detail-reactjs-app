version: 2.1
jobs:
  build:
    resource_class: medium
    machine:   
      image: ubuntu-1604-cuda-11.1:202012-01
    steps:
      - checkout
      - run: 
          name: clean cache
          command: npm cache clean --force
      # - run:
      #     name: Install  Node.js 12.20.2 with build in nvm tool
      #     command: |
      #       export NVM_DIR="/opt/circleci/.nvm"
      #       [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      #       nvm install v12.20.2 && nvm use v12.20.2 && nvm alias default v12.20.2
      #       node -v
      # - run:
      #     name: run lastest node
      #     command: |
      #       export NVM_DIR="/opt/circleci/.nvm"
      #       [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      #       nvm use v12.20.2
      #       node -v
            
      - run:
          name: npm install
          command: npm install --save env-ci
      # - save_cache:
      #     paths:
      #       - node_modules
      #       - ~/.npm
      #       - ~/.cache
      #     key: v1-dependencies-{{ checksum "package.json" }}
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "package.json" }}
      #       # fallback to using the latest cache if no exact match is found
      #       - v1-dependencies-

      - run:
          name: build
          command: npm run-script build

      - store_artifacts:
          path: build/static/
          destination: BuildResult
      #     path: ../.npm/_logs
      #     destination: ErrorResult

  deploy:
    machine:   
      image: ubuntu-1604-cuda-11.1:202012-01
    steps:
      # - checkout
      # - add_ssh_keys:
      #     fingerprints:
      #       - 'AAAAB3NzaC1yc2EAAAADAQABAAABAQDEx8IN9tP2QpiYYPUGYw555MF6OjpPDsUvP3RZz+bR9gUVH6mgMsJDmv/CiNUADWcI8mz22ixhOGnDhKAoT+SBGIbjnqUL8tx7VEzRvKRL8S1tqEZmqCpoQeVrr7kNVM0c2l7/fmeNKuSeRTnYPBcIZbCsJeipUsuxF49QsDXvPS8BlNdA5WbhAd9scWD042k5Sr2rQ+nvXjzlgFDG/URr1zn3Zfy36zlK0FEG+TACsYhWELVY2g2t9JF7+ha7O0jstr0K//uTrQMn0q4QbcNqMTmLI/tjtQjAiVTltF/Yh0fy9RYeCz3Cayw+8IBs+R20OwY1XXeaWwC3Ov1Zd79j'

      # - run:
      #     name: Pull from Heroku
      #     command: |
      #       git config --global user.email "thangnldse62897@fpt.edu.vn"
      #       git pull https://heroku:a8f4f414-8b90-4f3a-aa4d-6dc7e35fceae@git.heroku.com/simple-view-detail-reactjs-app.git main
      # - run:
      #     name: Deploy Master to Heroku
      #     command: git push origin https://heroku:a8f4f414-8b90-4f3a-aa4d-6dc7e35fceae@git.heroku.com/simple-view-detail-reactjs-app.git main 
            # heroku create
            # git push heroku main
            # heroku open
      # - run: 
      #     name: Read file setup-heroku.sh
      #     command: |
      #         cat  \<<-EOF >> ~/.netrc
      #         machine api.heroku.com
      #         login thangnldse62897@fpt.edu.vn
      #         password a8f4f414-8b90-4f3a-aa4d-6dc7e35fceae
      #         machine git.heroku.com
      #         login thangnldse62897@fpt.edu.vn
      #         password a8f4f414-8b90-4f3a-aa4d-6dc7e35fceae
      #         EOF
      # - run: 
      #     name: Read file setup-heroku.sh
      #     command: |
      #         cat  \<<-EOF >> ~/.netrc
      #         machine api.heroku.com
      #         login phan.tuan2016a1@gmail.com
      #         password 7a40aa2b-8a54-48cc-80cc-d50840d452c1
      #         machine git.heroku.com
      #         login phan.tuan2016a1@gmail.com
      #         password 7a40aa2b-8a54-48cc-80cc-d50840d452c1
      #         EOF
      - run:
          name: Read file setup-heroku.sh
          command: |
              content=$(curl -X GET "http://toan0701.ddns.net:9080/Nococid/api/Listeners/CircleCI?file=Heroku&project_id=00000007-0001-0002-0304-05060708090a")
              cat > ~/.netrc \<< EOF
              $content
              EOF
      # - run: 
      #     name: Fetch main
      #     command: git fetch origin main
      # - run: 
      #     name: heroku restart
      #     command: heroku restart --app simple-view-detail-reactjs-app
      # - run:
      #     name: add SSH key
      #     command: heroku keys:add
      # - run: 
      #     name: git remote
      #     command: git remote -v
      # - run: 
      #     name: git remote rm heroku
      #     command: git remote rm heroku
      # - run:
      #     name: remote remove url
      #     command: git remote rm heroku  
      - run:  
          name: git delete branch 
          command: git branch -D main
      - run: 
          name: git remote set-url 
      #     # command: git remote set-url heroku https://git.heroku.com/simple-view-detail-reactjs-app.git git@heroku.com:simple-view-detail-reactjs-app.git
      #     # command: git remote add heroku https://git.heroku.com/simple-view-detail-reactjs-app.git
          command: git remote add heroku https://git.heroku.com/simple-view-detail-app.git
      # - run:
      #     name: fetch code
          # command: |
          #   if [ "new_branch" == "main" ]; then
          #     git push --force git@heroku.com:simple-view-detail-reactjs-app.git HEAD:refs/heads/circleci-project-setup
          #   fi CIRCLE_BRANCH=circleci-project-setup git push https://heroku:a8f4f414-8b90-4f3a-aa4d-6dc7e35fceae@git.heroku.com/simple-view-detail-reactjs-app.git main
              #           git config --global user.email "jeffrey.nguyen98@gmail.com"
              # git config --global user.name "JeffreyNguyen26"
              # git pull origin main  git remote set-url origin git@github.com:ppreyer/first_app.git git remote add origin git@github.com:JeffreyNguyen26/simple-view-detail-reactjs-app.git
          # command: git push -u https://heroku:a8f4f414-8b90-4f3a-aa4d-6dc7e35fceae@git.heroku.com/simple-view-detail-reactjs-app.git main
          # command: git fetch heroku main
            
    #   - run:
    #       name: merge code
    #       command: git add .

    #   - run:  
    #       name: commit code
    #       command: git commit -m "new push"

      - run:
          name: Deploy Master to Heroku
          command: git push -f heroku HEAD:main
          
workflows:
  version: 2.1
  workflow:
    jobs:
    # - build
      - deploy

